name: Entrega continua

on:
  workflow_call:

jobs:

  ECS:
    runs-on: ubuntu-latest
    steps:
    - name: Configurando Credenciais da AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: obtendo arquivo da tarefa
      run: aws ecs describe-task-definition --task-definition Tarefa_API-go --query taskDefinition > task-definition.json 
      
    - name: copia do task-definition
      run: cp task-definition.json task-definition.json.old


    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: Go
        image: rgrandrade/ci_cd_testes_automatizados:${{github.run_number}}
        environment-variables: |
          HOST=${{ secrets.DBHOST }}
          USER=${{ secrets.DBUSER }}
          PASSWORD=${{ secrets.DBPASSWORD }}
          DBNAME=${{ secrets.DBNAME }}
          DBPORT=${{ secrets.DBPORT }}
          PORT=8000

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: Servico-API-Go
        cluster: api-go
        wait-for-service-stability: true  



    - name: Requisição
      continue-on-error: true
      run: echo "REQUEST=0" >> GITHUB_ENV ; sleep 30s ;  wget LB-API-Go-1984523422.us-east-2.elb.amazonaws.com:8000/peddro ||  echo "REQUEST=1" >> GITHUB_ENV 


    - name: Deploy Amazon ECS task definition
      if: ${{ env.REQUEST != 0 }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: task-definition.json.old
        service: Servico-API-Go
        cluster: api-go
        wait-for-service-stability: true         
